# Generated by Django 2.0.4 on 2018-05-05 15:56

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('link', models.CharField(max_length=255, unique=True)),
                ('district', models.CharField(max_length=255)),
                ('bizcircle', models.CharField(max_length=255)),
                ('taglist', models.CharField(db_column='tagList', max_length=255)),
                ('onsale', models.CharField(max_length=255)),
                ('onrent', models.CharField(blank=True, max_length=255, null=True)),
                ('year', models.CharField(blank=True, max_length=255, null=True)),
                ('housetype', models.CharField(blank=True, max_length=255, null=True)),
                ('cost', models.CharField(blank=True, max_length=255, null=True)),
                ('service', models.CharField(blank=True, max_length=255, null=True)),
                ('company', models.CharField(blank=True, max_length=255, null=True)),
                ('building_num', models.CharField(blank=True, max_length=255, null=True)),
                ('house_num', models.CharField(blank=True, max_length=255, null=True)),
                ('price', models.CharField(blank=True, max_length=255, null=True)),
                ('validdate', models.DateTimeField()),
            ],
            options={
                'db_table': 'community',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hisprice',
            fields=[
                ('houseid', models.CharField(db_column='houseID', max_length=255, primary_key=True, serialize=False)),
                ('totalprice', models.CharField(db_column='totalPrice', max_length=255)),
                ('date', models.DateTimeField()),
            ],
            options={
                'db_table': 'hisprice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Houseinfo',
            fields=[
                ('houseid', models.CharField(db_column='houseID', max_length=255, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('link', models.CharField(max_length=255)),
                ('community', models.CharField(max_length=255)),
                ('years', models.CharField(max_length=255)),
                ('housetype', models.CharField(max_length=255)),
                ('square', models.CharField(max_length=255)),
                ('direction', models.CharField(max_length=255)),
                ('floor', models.CharField(max_length=255)),
                ('taxtype', models.CharField(max_length=255)),
                ('totalprice', models.CharField(db_column='totalPrice', max_length=255)),
                ('unitprice', models.CharField(db_column='unitPrice', max_length=255)),
                ('followinfo', models.CharField(db_column='followInfo', max_length=255)),
                ('decoration', models.CharField(max_length=255)),
                ('validdate', models.DateTimeField()),
            ],
            options={
                'db_table': 'houseinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rentinfo',
            fields=[
                ('houseid', models.CharField(db_column='houseID', max_length=255, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('link', models.CharField(max_length=255)),
                ('region', models.CharField(max_length=255)),
                ('zone', models.CharField(max_length=255)),
                ('meters', models.CharField(max_length=255)),
                ('other', models.CharField(max_length=255)),
                ('subway', models.CharField(max_length=255)),
                ('decoration', models.CharField(max_length=255)),
                ('heating', models.CharField(max_length=255)),
                ('price', models.CharField(max_length=255)),
                ('pricepre', models.CharField(max_length=255)),
                ('updatedate', models.DateTimeField()),
            ],
            options={
                'db_table': 'rentinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sellinfo',
            fields=[
                ('houseid', models.CharField(db_column='houseID', max_length=255, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('link', models.CharField(max_length=255)),
                ('community', models.CharField(max_length=255)),
                ('district', models.CharField(max_length=255)),
                ('years', models.CharField(max_length=255)),
                ('housetype', models.CharField(max_length=255)),
                ('square', models.CharField(max_length=255)),
                ('direction', models.CharField(max_length=255)),
                ('floor', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=255)),
                ('source', models.CharField(max_length=255)),
                ('totalprice', models.CharField(db_column='totalPrice', max_length=255)),
                ('unitprice', models.CharField(db_column='unitPrice', max_length=255)),
                ('dealdate', models.CharField(blank=True, max_length=255, null=True)),
                ('updatedate', models.DateTimeField()),
            ],
            options={
                'db_table': 'sellinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobile', models.CharField(blank=True, default='', max_length=11, null=True, verbose_name='手机号码')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='newsFlash',
            fields=[
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('link', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('source', models.CharField(max_length=255)),
                ('datetime', models.CharField(max_length=255)),
                ('img', models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='UserCollect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=150, verbose_name='用户')),
                ('community_id', models.BigIntegerField(default=0, verbose_name='小区ID')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='收藏时间')),
            ],
            options={
                'verbose_name': '用户收藏',
                'verbose_name_plural': '用户收藏',
            },
        ),
    ]
